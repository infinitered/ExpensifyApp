diff --git a/node_modules/react-native-share-menu/android/build.gradle b/node_modules/react-native-share-menu/android/build.gradle
index 9557fdb..cc6d464 100644
--- a/node_modules/react-native-share-menu/android/build.gradle
+++ b/node_modules/react-native-share-menu/android/build.gradle
@@ -1,12 +1,22 @@
+buildscript {
+    ext {
+        rnsmDefaultTargetSdkVersion = 31
+        rnsmDefaultCompileSdkVersion = 31
+        rnsmDefaultMinSdkVersion = 21
+    }
+    ext.safeExtGet = {prop, fallback ->
+        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
+    }
+}
+
 apply plugin: 'com.android.library'
 
 android {
-    compileSdkVersion 29
-    buildToolsVersion "29.0.2"
+    compileSdkVersion safeExtGet('compileSdkVersion', rnsmDefaultCompileSdkVersion)
 
     defaultConfig {
-        minSdkVersion 16
-        targetSdkVersion 29
+        minSdkVersion safeExtGet('minSdkVersion', rnsmDefaultCompileSdkVersion)
+        targetSdkVersion safeExtGet('targetSdkVersion', rnsmDefaultCompileSdkVersion)
         versionCode 1
         versionName "1.0"
         ndk {
diff --git a/node_modules/react-native-share-menu/android/build/intermediates/javac/debug/classes/com/meedan/ShareMenuModule.class b/node_modules/react-native-share-menu/android/build/intermediates/javac/debug/classes/com/meedan/ShareMenuModule.class
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java b/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java
index 09abd7b..ee33f46 100644
--- a/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java
+++ b/node_modules/react-native-share-menu/android/src/main/java/com/meedan/ShareMenuModule.java
@@ -112,6 +112,14 @@ public class ShareMenuModule extends ReactContextBaseJavaModule implements Activ
     clearSharedText();
   }
 
+  @ReactMethod
+  public void addListener(String eventName) {
+  }
+
+  @ReactMethod
+  public void removeListeners(Integer count) {
+  }
+
   private void dispatchEvent(ReadableMap shared) {
     if (mReactContext == null || !mReactContext.hasActiveCatalystInstance()) {
       return;
diff --git a/node_modules/react-native-share-menu/index.js b/node_modules/react-native-share-menu/index.js
index e8e1b73..bdd4d79 100644
--- a/node_modules/react-native-share-menu/index.js
+++ b/node_modules/react-native-share-menu/index.js
@@ -1,4 +1,4 @@
-import { NativeModules, NativeEventEmitter } from "react-native";
+import { NativeEventEmitter, NativeModules } from "react-native";
 
 const { ShareMenu } = NativeModules;
 
@@ -7,18 +7,19 @@ const EventEmitter = new NativeEventEmitter(ShareMenu);
 const NEW_SHARE_EVENT_NAME = "NewShareEvent";
 
 export const ShareMenuReactView = {
-  dismissExtension(error = null) {
-    NativeModules.ShareMenuReactView.dismissExtension(error);
-  },
-  openApp() {
-    NativeModules.ShareMenuReactView.openApp();
-  },
   continueInApp(extraData = null) {
     NativeModules.ShareMenuReactView.continueInApp(extraData);
   },
   data() {
     return NativeModules.ShareMenuReactView.data();
   },
+  dismissExtension(error = null) {
+    NativeModules.ShareMenuReactView.dismissExtension(error);
+  },
+  isExtension: NativeModules.ShareMenuReactView.isExtension,
+  openApp() {
+    NativeModules.ShareMenuReactView.openApp();
+  },
 };
 
 export default {
diff --git a/node_modules/react-native-share-menu/ios/Modules/ShareMenuReactView.swift b/node_modules/react-native-share-menu/ios/Modules/ShareMenuReactView.swift
index e290cce..1c114ff 100644
--- a/node_modules/react-native-share-menu/ios/Modules/ShareMenuReactView.swift
+++ b/node_modules/react-native-share-menu/ios/Modules/ShareMenuReactView.swift
@@ -27,6 +27,11 @@ public class ShareMenuReactView: NSObject {
         ShareMenuReactView.viewDelegate = nil
     }
 
+    @objc
+    func constantsToExport() -> [String: Any]! {
+        return ["isExtension": ShareMenuReactView.viewDelegate?.loadExtensionContext() != nil]
+    }
+
     @objc(dismissExtension:)
     func dismissExtension(_ error: String?) {
         guard let extensionContext = ShareMenuReactView.viewDelegate?.loadExtensionContext() else {
@@ -34,6 +39,8 @@ public class ShareMenuReactView: NSObject {
             return
         }
 
+        ShareMenuReactView.detachViewDelegate()
+
         if error != nil {
             let exception = NSError(
                 domain: Bundle.main.bundleIdentifier!,
@@ -130,7 +137,7 @@ public class ShareMenuReactView: NSObject {
 
                             if (imageUrl != nil) {
                                 if let imageData = try? Data(contentsOf: imageUrl) {
-                                    results.append([DATA_KEY: imageUrl.absoluteString, MIME_TYPE_KEY: self.extractMimeType(from: imageUrl)])
+                                    results.append([DATA_KEY: self.attemptCopyToAppGroupContainerCache(from: imageUrl), MIME_TYPE_KEY: self.extractMimeType(from: imageUrl)])
                                 }
                             } else {
                                 let image: UIImage! = item as? UIImage
@@ -147,7 +154,7 @@ public class ShareMenuReactView: NSObject {
                                         // Writing the image to the URL
                                         try imageData.write(to: imageURL)
 
-                                        results.append([DATA_KEY: imageUrl.absoluteString, MIME_TYPE_KEY: imageURL.extractMimeType()])
+                                        results.append([DATA_KEY: self.attemptCopyToAppGroupContainerCache(from: imageUrl), MIME_TYPE_KEY: imageURL.extractMimeType()])
                                     } catch {
                                         callback(nil, NSException(name: NSExceptionName(rawValue: "Error"), reason:"Can't load image", userInfo:nil))
                                     }
@@ -161,7 +168,7 @@ public class ShareMenuReactView: NSObject {
                         provider.loadItem(forTypeIdentifier: kUTTypeData as String, options: nil) { (item, error) in
                             let url: URL! = item as? URL
 
-                            results.append([DATA_KEY: url.absoluteString, MIME_TYPE_KEY: self.extractMimeType(from: url)])
+                            results.append([DATA_KEY: self.attemptCopyToAppGroupContainerCache(from: url), MIME_TYPE_KEY: self.extractMimeType(from: url)])
 
                             semaphore.signal()
                         }
@@ -189,4 +196,38 @@ public class ShareMenuReactView: NSObject {
 
       return mimeUTI.takeUnretainedValue() as String
     }
+
+    func attemptCopyToAppGroupContainerCache(from srcURL: URL) -> String {
+      guard let hostAppId = Bundle.main.object(forInfoDictionaryKey: HOST_APP_IDENTIFIER_INFO_PLIST_KEY) else {
+        return srcURL.absoluteString
+      }
+      guard let groupFileManagerContainer = FileManager.default
+              .containerURL(forSecurityApplicationGroupIdentifier: "group.\(hostAppId)")
+      else {
+        return srcURL.absoluteString
+      }
+      
+      let destDir = groupFileManagerContainer.appendingPathComponent("ShareMenu", isDirectory: true)
+      if !FileManager.default.fileExists(atPath: destDir.path) {
+        do {
+            try FileManager.default.createDirectory(atPath: destDir.path, withIntermediateDirectories: true, attributes: nil)
+        } catch {
+            print(error.localizedDescription)
+        }
+      }
+      let destURL = destDir.appendingPathComponent(srcURL.lastPathComponent)
+
+      do {
+        if FileManager.default.fileExists(atPath: destURL.path) {
+          try FileManager.default.removeItem(at: destURL)
+        }
+        try FileManager.default.copyItem(at: srcURL, to: destURL)
+      } catch (let error) {
+        print("Could not save file from \(srcURL) to \(destURL): \(error)")
+        return srcURL.absoluteString
+      }
+
+      return destURL.absoluteString
+    }
+
 }
diff --git a/node_modules/react-native-share-menu/ios/ReactShareViewController.swift b/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
index f42bce6..d31fac9 100644
--- a/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
+++ b/node_modules/react-native-share-menu/ios/ReactShareViewController.swift
@@ -13,7 +13,7 @@ class ReactShareViewController: ShareViewController, RCTBridgeDelegate, ReactSha
   func sourceURL(for bridge: RCTBridge!) -> URL! {
 #if DEBUG
     return RCTBundleURLProvider.sharedSettings()?
-      .jsBundleURL(forBundleRoot: "index.share", fallbackResource: nil)
+      .jsBundleURL(forBundleRoot: "index")
 #else
     return Bundle.main.url(forResource: "main", withExtension: "jsbundle")
 #endif
@@ -29,21 +29,6 @@ class ReactShareViewController: ShareViewController, RCTBridgeDelegate, ReactSha
       initialProperties: nil
     )
 
-    rootView.backgroundColor = UIColor(red: 1, green: 1, blue: 1, alpha: 1)
-    backgroundColorSetup: if let backgroundColorConfig = Bundle.main.infoDictionary?[REACT_SHARE_VIEW_BACKGROUND_COLOR_KEY] as? [String:Any] {
-      if let transparent = backgroundColorConfig[COLOR_TRANSPARENT_KEY] as? Bool, transparent {
-        rootView.backgroundColor = nil
-        break backgroundColorSetup
-      }
-
-      let red = backgroundColorConfig[COLOR_RED_KEY] as? Float ?? 1
-      let green = backgroundColorConfig[COLOR_GREEN_KEY] as? Float ?? 1
-      let blue = backgroundColorConfig[COLOR_BLUE_KEY] as? Float ?? 1
-      let alpha = backgroundColorConfig[COLOR_ALPHA_KEY] as? Float ?? 1
-
-      rootView.backgroundColor = UIColor(red: CGFloat(red), green: CGFloat(green), blue: CGFloat(blue), alpha: CGFloat(alpha))
-    }
-
     self.view = rootView
 
     ShareMenuReactView.attachViewDelegate(self)
diff --git a/node_modules/react-native-share-menu/ios/ShareViewController.swift b/node_modules/react-native-share-menu/ios/ShareViewController.swift
index 12d8c92..0d84f19 100644
--- a/node_modules/react-native-share-menu/ios/ShareViewController.swift
+++ b/node_modules/react-native-share-menu/ios/ShareViewController.swift
@@ -13,6 +13,7 @@ import MobileCoreServices
 import UIKit
 import Social
 import RNShareMenu
+import Firebase
 
 class ShareViewController: SLComposeServiceViewController {
   var hostAppId: String?
@@ -22,6 +23,10 @@ class ShareViewController: SLComposeServiceViewController {
   override func viewDidLoad() {
     super.viewDidLoad()
     
+    if FirebaseApp.app() == nil {
+      FirebaseApp.configure()
+    }
+    
     if let hostAppId = Bundle.main.object(forInfoDictionaryKey: HOST_APP_IDENTIFIER_INFO_PLIST_KEY) as? String {
       self.hostAppId = hostAppId
     } else {
